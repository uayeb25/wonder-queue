export declare enum TokenBase {
    BASE16 = "0123456789abcdef",
    BASE36 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
    BASE58 = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
    BASE62 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
    BASE66 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~",
    BASE71 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!'()*-._~"
}
export interface ITokenDto {
    readonly bitSize: number;
    readonly baseEncoding: TokenBase | string;
}
export declare class TokenGenerator {
    readonly _bitSize: number;
    readonly _baseEncoding: TokenBase | string;
    readonly _base: number;
    readonly _tokenLength: number;
    readonly _bytes: number;
    constructor(dto?: Partial<ITokenDto>);
    generate(): string;
}
